{"version":3,"file":"assets/js/main.00aecb5f.js","mappings":"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","sources":["webpack://gem-puzzle/./src/js/main.js","webpack://gem-puzzle/./src/js/game.js"],"sourcesContent":["import Game from './game';\n\nconst game = new Game()","class Game {\n\n  constructor() {\n    this.info = [];\n    this.defaultFSid = 4;\n    this.itemSize = 80;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.moves = 0;\n    this.isGame = false;\n    this.isTimer = 0;\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.blocks = [];\n    this.zeroBlock = [];\n    this.currentBlock = {};\n    this.sound = this.playAudio();\n    this.init();\n  }\n\n  init() {\n    const createInfoObjs = () => {\n      return [...Array(6).keys()].map((el, i) => {\n        return el = {\n          id: i + 3,\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n          blocksMap: [],\n          winnerBlocksResult: [...Array((i + 3) * (i + 3)).keys()],\n          best: {\n            time: { minutes: 0, seconds: 0 },\n            moves: 0,\n          },\n          last: false\n        }\n      })\n    }\n    this.info = createInfoObjs()\n    this.createPage();\n    this.restore(this.defaultFSid);\n    this.setCanvas();\n    this.playAudio();\n\n    document.addEventListener('click', (e) => {\n      if (e.target == this.canvas && this.isGame) this.moveBlock(e);\n      if (e.target == this.startBtn) this.start();\n      if (e.target == this.stopBtn) this.stop();\n      if (e.target == this.saveBtn) this.save();\n      if (e.target == this.resultBtn) this.result();\n      if (e.target == this.soundBtn || e.target == document.querySelector('.sound img')) {\n\n        if (this.sound.muted) {\n          document.querySelector('.sound img').src = './assets/sound_on_icon.svg'\n          this.sound.muted = false\n        } else {\n          this.sound.muted = true\n          document.querySelector('.sound img').src = './assets/sound_off_icon.svg'\n        }\n\n        this.soundBtn.classList.toggle('active')\n      }\n\n      if (e.target.classList.contains('frame-size')) {\n\n        this.stop();\n        this.clearMoves();\n        this.clearTimer();\n\n        this.restore(+e.target.dataset.action);\n\n        this.setCanvas();\n        this.frameSizeInfoElem.textContent = `${this.frameSize.id}x${this.frameSize.id}`\n      }\n    })\n  }\n\n  createPage() {\n    if (!document.querySelector('container')) {\n\n      const container = document.createElement('div')\n      container.className = 'container'\n      document.body.prepend(container)\n\n      let h1 = document.createElement('h1')\n      h1.textContent = 'Gem Puzzle by '\n      const a = document.createElement('a')\n      a.href = 'https://github.com/predmaxim'\n      a.textContent = 'PredMaxim'\n      a.target = '_blank'\n      h1.append(a)\n      container.prepend(h1)\n\n      let buttons = document.createElement('div')\n      buttons.className = 'buttons'\n      container.append(buttons)\n\n      for (let button of ['start', 'stop', 'save', 'result']) {\n        let b = document.createElement('button')\n        b.className = `${button}`\n        b.textContent = `${button}`\n        buttons.append(b)\n      }\n\n      let sound = document.createElement('button')\n      sound.className = 'sound'\n      buttons.append(sound)\n      let soundImg = document.createElement('img')\n      soundImg.src = './assets/sound_on_icon.svg'\n      soundImg.setAttribute('alt', 'sound')\n      sound.append(soundImg)\n\n      let currentInfo = document.createElement('div')\n      currentInfo.className = 'current-info'\n      container.append(currentInfo)\n\n      currentInfo.insertAdjacentHTML('afterbegin', '<div class=\"timer\">Time: <span>00:00</span></div>')\n      currentInfo.insertAdjacentHTML('afterbegin', '<div class=\"moves\">Moves: <span>0</span></div>')\n\n      let gameContainer = document.createElement('div')\n      gameContainer.className = 'game-container'\n      container.append(gameContainer)\n\n      let frameSizeInfo = document.createElement('div')\n      frameSizeInfo.className = 'frame-size-info'\n      container.append(frameSizeInfo)\n\n      frameSizeInfo.insertAdjacentHTML('afterbegin', 'Frame size: <span></span></div>')\n\n      let otherFrameSizes = document.createElement('div')\n      otherFrameSizes.className = 'other-frame-sizes'\n      container.append(otherFrameSizes)\n\n      otherFrameSizes.innerHTML += 'Other sizes:'\n\n      for (let frameSize of this.info) {\n        let a = document.createElement('a')\n        a.href = '#'\n        a.className = `frame-size`\n        a.setAttribute('data-action', `${frameSize.id}`)\n        a.textContent = `${frameSize.id}x${frameSize.id}`\n        otherFrameSizes.append(a)\n      }\n\n      this.movesElem = document.querySelector('.moves span')\n      this.wrap = gameContainer\n      this.startBtn = document.querySelector('.start')\n      this.stopBtn = document.querySelector('.stop');\n      this.saveBtn = document.querySelector('.save');\n      this.resultBtn = document.querySelector('.result');\n      this.soundBtn = document.querySelector('.sound');\n      this.timerElem = document.querySelector('.timer span');\n      this.frameSizeInfoElem = document.querySelector('.frame-size-info span');\n    }\n  }\n\n  getRandomBlocks(fs) {\n    const s = this.info.filter(e => e.id == fs)[0]\n\n    const arr = s.winnerBlocksResult.slice()\n\n    const res = []\n\n    for (let i = arr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n\n    while (res.length < s.id) {\n      res.push(arr.splice(0, s.id));\n    }\n\n    return res;\n  }\n\n  setCurrentBlocksMap(fs) {\n    if (this.info.filter(e => e.id == fs)[0].blocksMap.length === 0) {\n\n      this.frameSize.blocksMap = this.getRandomBlocks(fs).slice()\n\n    } else this.frameSize.blocksMap = this.info.filter(e => e.id == fs)[0].blocksMap.slice()\n  }\n\n  setCanvas() {\n\n    this.canvas.classList.add('game')\n    this.canvas.width = this.frameSize.id * this.itemSize\n    this.canvas.height = this.canvas.width\n\n    this.wrap.insertAdjacentElement('afterbegin', this.canvas);\n\n    let tempBlocks = [];\n    for (let i = 0; i < this.frameSize.id; i++) {\n      for (let j = 0; j < this.frameSize.id; j++) {\n        this.ctx.save();\n        this.ctx.translate(j * this.itemSize + 2, i * this.itemSize + 2);\n        this.ctx.fillStyle = '#e2e2e2'\n        this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n        if (this.frameSize.blocksMap[i][j] === 0) {\n          this.ctx.fillStyle = '#fff';\n          this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n          // zero block info to zeroBlock variable\n          this.zeroBlock = {\n            name: this.frameSize.blocksMap[i][j],\n            x: Math.floor(j * (this.itemSize)),\n            y: Math.floor(i * (this.itemSize)),\n            width: Math.floor(this.itemSize),\n            height: Math.floor(this.itemSize),\n            row: i + 1,\n            col: j + 1,\n          }\n        } else this.ctx.fillStyle = '#000';\n\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.font = \"20px sans-serif\";\n        window.innerWidth < 400 && this.frameSize.id > 5\n          ? this.ctx.fillText(this.frameSize.blocksMap[i][j], this.itemSize / 2, this.itemSize / 2)\n          : this.ctx.fillText(this.frameSize.blocksMap[i][j], this.itemSize / 2, this.itemSize / 2)\n        this.ctx.restore();\n\n        // push new block info to blocks array\n        tempBlocks.push({\n          name: this.frameSize.blocksMap[i][j],\n          x: Math.floor(j * this.itemSize),\n          y: Math.floor(i * this.itemSize),\n          width: Math.floor(this.itemSize),\n          height: Math.floor(this.itemSize),\n          row: i + 1,\n          col: j + 1,\n        })\n\n        this.blocks.length = 0\n        this.blocks = tempBlocks.flat()\n      }\n    }\n  }\n\n  moveBlock(e) {\n    const x = Math.floor(e.offsetX);\n    const y = Math.floor(e.offsetY);\n\n    const drawBlock = () => {\n      if (!this.sound.muted) this.sound.play()\n\n      this.frameSize.blocksMap = this.frameSize.blocksMap.map((arr) => {\n        return arr.map(e => {\n          if (e == 0) e = this.currentBlock.name\n          else if (e == this.currentBlock.name) e = 0\n          return e\n        })\n      })\n\n\n      this.moves += 1\n      this.frameSize.moves = this.moves\n      this.movesElem.textContent = this.moves\n\n      this.setCanvas()\n      if (!this.isSolved()) this.setCanvas()\n      else this.gameOver()\n\n    }\n\n    if (this.isClickOnBlock(x, y)) {\n\n      if (this.currentBlock.col == this.zeroBlock.col) {\n        if (this.currentBlock.y == this.zeroBlock.y + this.zeroBlock.height) drawBlock()\n        if (this.currentBlock.y + this.zeroBlock.height == this.zeroBlock.y) drawBlock()\n      }\n\n      if (this.currentBlock.row == this.zeroBlock.row) {\n        if (this.currentBlock.x + this.currentBlock.width == this.zeroBlock.x) drawBlock()\n        if (this.currentBlock.x == this.zeroBlock.x + this.zeroBlock.width) drawBlock()\n      }\n    }\n  }\n\n  start() {\n    this.startBtn.classList.add('active')\n    if (document.querySelector('.message')) document.querySelector('.message').remove();\n\n    this.minutes = this.frameSize.time.minutes\n    this.seconds = this.frameSize.time.seconds\n\n    if (this.isGame === true) {\n      this.clearMoves();\n      this.clearTimer();\n      this.frameSize.blocksMap = this.getRandomBlocks(this.frameSize.id).slice()\n    }\n\n    this.setCanvas()\n    this.timer();\n    this.isGame = true;\n    console.log('Game started');\n  }\n\n  stop() {\n    this.startBtn.classList.remove('active')\n    clearInterval(this.isTimer);\n    this.isGame = false;\n    console.log('Game stopped');\n  }\n\n  result() {\n    this.message('result')\n    document.querySelector('.result').classList.add('active')\n  }\n\n  timer() {\n    console.log('Timer Started')\n\n    this.isTimer = setInterval(() => {\n      if (this.seconds == 59) {\n        this.minutes += 1\n        this.seconds = 0\n      }\n      this.seconds += 1\n\n      this.frameSize.time.minutes = this.minutes\n      this.frameSize.time.seconds = this.seconds\n\n      this.timerElem.textContent = `${String(this.minutes).length < 2 ? 0 : ''}${this.minutes}:${String(this.seconds).length < 2 ? 0 : ''}${this.seconds}`\n    }, 1000)\n  }\n\n  clearTimer() {\n    clearInterval(this.isTimer);\n    this.timerElem.textContent = `00:00`;\n    this.minutes = 0;\n    this.seconds = 0;\n  }\n\n  clearMoves() {\n    this.moves = 0;\n    this.movesElem.textContent = 0;\n    // this.frameSize.moves = 0;\n  }\n\n  message(type, str) {\n\n    const messages = {\n      result: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>YOUR RESULTS</b></div>\n        <div class=\"message__frame-size\">Frame size: ${this.frameSize.id}x${this.frameSize.id}</div>\n        <div class=\"message__time\">Time: ${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds}</div>\n        <div class=\"message__moves\">Moves: ${this.moves}</div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length < 2 ? 0 : ''}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length < 2 ? 0 : ''}${this.frameSize.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n\n      winner: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>Hooray! You solved the puzzle in ${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds} and ${this.moves} moves!</b></div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length < 2 ? 0 : ''}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length < 2 ? 0 : ''}${this.frameSize.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n\n      message: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__body\">${str}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n    }\n\n    for (let key in messages) {\n      if (key == type) {\n        if (document.querySelector('.message')) document.querySelector('.message').remove()\n        this.wrap.insertAdjacentHTML('afterbegin', messages[key])\n        document.querySelector('.message__button').addEventListener('click', () => {\n          document.querySelector('.result').classList.remove('active')\n          document.querySelector('.message').remove()\n        })\n      }\n    }\n  }\n\n  save() {\n\n    if (this.isSolved()) {\n      if (this.frameSize.best.moves === 0) {\n        this.frameSize.best.moves = this.moves\n        this.frameSize.best.time.minutes = this.minutes\n        this.frameSize.best.time.seconds = this.seconds\n      } else if (this.moves < this.frameSize.best.moves) {\n        this.frameSize.best.moves = this.moves\n        this.frameSize.best.time.minutes = this.minutes\n        this.frameSize.best.time.seconds = this.seconds\n      }\n    }\n\n    const i = this.info.reduce((acc, e, i) => e.id === this.frameSize.id ? acc += i : acc, 0)\n    this.info[i] = JSON.parse(JSON.stringify(this.frameSize));\n\n    localStorage.setItem('info', JSON.stringify(this.info))\n    console.log('Game saved')\n  }\n\n  getFrameSize(fs) {\n    return JSON.parse(JSON.stringify(this.info.filter(e => e.id === fs)[0]))\n  }\n\n  setFrameSize(fs) {\n\n    if (this.frameSize) this.info.filter(e => e.id === this.frameSize.id)[0].last = false\n    this.info.filter(e => e.id === fs)[0].last = true\n    this.frameSize = this.getFrameSize(fs)\n\n  }\n\n  restore(fs) {\n\n    if (localStorage.getItem('info')) this.info = JSON.parse(localStorage.getItem('info'))\n\n    const s = this.info.filter(e => e.id == fs)[0]\n    this.setFrameSize(fs)\n    this.setCurrentBlocksMap(fs)\n\n    this.timerElem.textContent = `${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds}`;\n    this.moves = this.frameSize.moves\n    this.movesElem.textContent = this.frameSize.moves\n    this.frameSizeInfoElem.textContent = `${this.frameSize.id}x${this.frameSize.id}`;\n\n  }\n\n  isClickOnBlock(x, y) {\n    for (let block of this.blocks) {\n      if (x >= block.x && x <= (block.x + block.width) && y >= block.y && y <= (block.y + block.height)) {\n        this.currentBlock = block\n        return true\n      }\n    }\n    return false\n  }\n\n  isSolved() {\n    const w = this.frameSize.winnerBlocksResult.slice()\n    const c = this.frameSize.blocksMap.flat()\n    w.splice(0, 1)\n    c.splice(c.length - 1, 1)\n    return w.every((e, i) => e == c[i])\n  }\n\n  gameOver() {\n    this.save();\n    this.message('winner', 'YOU WON!!!');\n    console.log('Winner!');\n  }\n\n  playAudio() {\n    return new Audio('./assets/adriantnt_u_click.mp3');\n  }\n}\n\n\nexport default Game;\n"],"names":["constructor","this","info","defaultFSid","itemSize","minutes","seconds","moves","isGame","isTimer","canvas","document","createElement","ctx","getContext","blocks","zeroBlock","currentBlock","sound","playAudio","init","Array","keys","map","el","i","id","time","blocksMap","winnerBlocksResult","best","last","createPage","restore","setCanvas","addEventListener","e","target","moveBlock","startBtn","start","stopBtn","stop","saveBtn","save","resultBtn","result","soundBtn","querySelector","muted","src","classList","toggle","contains","clearMoves","clearTimer","dataset","action","frameSizeInfoElem","textContent","frameSize","container","className","body","prepend","h1","a","href","append","buttons","button","b","soundImg","setAttribute","currentInfo","insertAdjacentHTML","gameContainer","frameSizeInfo","otherFrameSizes","innerHTML","movesElem","wrap","timerElem","getRandomBlocks","fs","s","filter","arr","slice","res","length","j","Math","floor","random","push","splice","setCurrentBlocksMap","add","width","height","insertAdjacentElement","tempBlocks","translate","fillStyle","fillRect","name","x","y","row","col","textAlign","textBaseline","font","window","innerWidth","fillText","flat","offsetX","offsetY","drawBlock","play","isSolved","gameOver","isClickOnBlock","remove","timer","console","log","clearInterval","message","setInterval","String","type","str","messages","winner","key","reduce","acc","JSON","parse","stringify","localStorage","setItem","getFrameSize","setFrameSize","getItem","block","w","c","every","Audio"],"sourceRoot":""}